# Terminal Settings
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# True color settings
set -g allow-passthrough on

# Set default shell
set -g default-command "${SHELL}"

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Turn on the mouse
set -g mouse on

set-option -sg escape-time 10
set-option -g focus-events on

set -g default-shell "/bin/zsh"

set -g detach-on-destroy off

# automatically renumber tmux windows
set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Stop showing the messages for an eternity
set -g display-time 750

# Set Window Title Name
set-option -g set-titles on
set-option -g set-titles-string "#S"

# Activity Monitoring
set -g monitor-activity off
set -g visual-activity off

# make window/pane index start with 1
set -g base-index 1
set -g pane-base-index 1

# Rename Pane with Tail of working directory
set-option -g automatic-rename on
# set-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -g automatic-rename-format ''
set-option -g status-interval 1

# Window Splis
bind Enter split-window -v -c "#{pane_current_path}"
bind S-Enter split-window -h -c "#{pane_current_path}"
bind -n M-Enter split-window -v -c "#{pane_current_path}"
bind -n M-S-Enter split-window -h -c "#{pane_current_path}"

# Split Window Apps
bind C-g new-window -c "#{pane_current_path}" -n "LazyGit" lazygit
bind C-d new-window -c "#{pane_current_path}" -n "LazyDocker" lazydocker
bind C-t split-window -v -c "#{pane_current_path}" "$(pwd)/vendor/bin/sail tinker"
bind C-e new-window -c "#{pane_current_path}" -n "Yazi" yazi
bind C-h new-window -c "#{pane_current_path}" -n "Top" htop

# Join Panes
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

bind s run-shell ~/.local/bin/tmux-fzf-ssh

# Last Window and Last Session
unbind "'"
bind "'" last-window
unbind ";"
bind ";" switch-client -l

bind r source-file ~/.tmux.conf

# Toggle status bar
bind b set status

# Toggle Sync Panes
bind a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Shortcut to new window
bind-key -n M-t new-window -c "#{pane_current_path}"

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Config Reload
bind-key r source-file ~/.tmux.conf \; display-message "Configuration Reloaded"

# Smart Split Nvim Navigation
# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

set -s copy-command 'wl-copy'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle

bind-key -T copy-mode-vi C-\\ select-pane -l
bind-key -n "C-\\" if-shell "$is_vim" "send-keys C-\\\\"  "select-pane -l"

# Tmux Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# Tmux Fzf
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="f"
TMUX_FZF_ORDER="session|window|pane|command|keybinding"
TMUX_FZF_SESSION_FORMAT="#{session_windows} windows"

unbind t
bind-key "t" run-shell "sesh connect \"$(
	sesh list | fzf-tmux -p 55%,60% \
        --reverse --no-sort --border-label ' sesh ' --prompt '⚡  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list)' \
    --bind 'ctrl-t:change-prompt(  )+reload(sesh list -t)' \
    --bind 'ctrl-g:change-prompt(󱦞 )+reload(sesh list -c)' \
    --bind 'ctrl-x:change-prompt(  )+reload(sesh list -z)' \
    --bind 'ctrl-f:change-prompt(󰍉  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(  )+reload(sesh list)'
)\""

# Status Bar Config
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_prefix_prompt 'Prefix'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green,bold'
set -g @prefix_highlight_fg 'black'
set -g @prefix_highlight_bg 'blue'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_output_prefix '( '
set -g @prefix_highlight_output_suffix ' )'

set -g status-position top
set -g status-style "fg=blue,none"
set -g status-justify "absolute-centre"
set -g mode-style "fg=blue,bg=default,reverse"
set -g message-style "fg=blue,bg=default,reverse"
set -g message-command-style "fg=blue,bg=default"
set -g pane-border-style "fg=blue"
set -g pane-active-border-style "fg=blue"
set -g status "on"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-style NONE
set -g status-right-style NONE
set -g status-left ""
set -ga status-left "#[fg=cyan]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[fg=white,none]"
set -ga status-left "#[fg=magenta,none]  #{pane_current_command} "
set -ga status-left "#[fg=white,none]#{?window_zoomed_flag,,}"
set -ga status-left "#[fg=yellow]#{?window_zoomed_flag,  zoom ,}"
set -g status-right '#{prefix_highlight}'
set -ga status-right "#[fg=blue,bold]  #S "

set -g window-status-current-style "bg=magenta,fg=black,bold"
set -g window-status-style "bg=colour8,fg=colour7"
set -g window-status-activity-style "bg=red,fg=black"
set -g window-status-bell-style "bg=red,fg=black,bold"

set -gF window-status-separator "#[fg=white,none]"

set -g window-status-format " #I#{?#{!=:#{window_name},},: #W,} "
set -g window-status-current-format " #I#{?#{!=:#{window_name},},: #W,} "

# pane border look and feel
setw -g pane-border-status top
setw -g pane-border-format ""
setw -g pane-border-lines single

# Tmux SSH
set -g @plugin 'pschmitt/tmux-ssh-split'
set-option -g @ssh-split-keep-cwd "true"
set-option -g @ssh-split-keep-remote-cwd "true"
set-option -g @ssh-split-fail "false"
set-option -g @ssh-split-no-env "false"
set-option -g @ssh-split-no-shell "false"
set-option -g @ssh-split-strip-cmd "true"
set-option -g @ssh-split-verbose "true"
set-option -g @ssh-split-debug "false"
set-option -g @ssh-split-h-key "?"
set-option -g @ssh-split-v-key "|"
set-option -g @ssh-split-w-key "C"

# Tilish
set -g @plugin 'jabirali/tmux-tilish'
set -g @tilish-dmenu 'on'
set -g @tilish-navigate 'on'
set -g @tilish-easymode 'on'
set -g @tilish-default 'main-horizontal'
# set -g @tilish-default 'main-vertical'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'

# vim: ft=sh
